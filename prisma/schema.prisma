generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model Area {
  id        BigInt      @id @default(autoincrement())
  name      String
  careers   Career[]
  job_types JobType[]

  @@map("area")
}

model InstitutionEmailDomain {
  id             BigInt      @id @default(autoincrement())
  institution_id BigInt
  email_domain   String

  institution    Institution @relation(fields: [institution_id], references: [id])

  @@unique([institution_id, email_domain])
  @@map("institution_email_domains")
}

model Institution {
  id            BigInt   @id @default(autoincrement())
  name          String
  email         String
  phone         String
  is_active     Boolean
  created_at    DateTime @default(now())
  users         User[]
  careers       Career[]
  email_domains InstitutionEmailDomain[]

  @@map("institution")
  @@index([email])
}

model Career {
  id             BigInt      @id @default(autoincrement())
  name           String
  institution_id BigInt
  area_id        BigInt
  institution    Institution @relation(fields: [institution_id], references: [id])
  area           Area        @relation(fields: [area_id], references: [id])
  users          User[]

  @@map("career")
  @@index([institution_id])
  @@index([area_id])
}

model User {
  id             String       @id @db.Uuid
  authId         String       @unique
  name           String
  email          String       @unique
  birthday       DateTime     @db.Date
  institution_id BigInt
  career_id      BigInt
  institution    Institution  @relation(fields: [institution_id], references: [id])
  career         Career       @relation(fields: [career_id], references: [id])
  interviews     Interview[]

  @@map("user")
  @@index([institution_id])
  @@index([career_id])
}

model JobType {
  id          BigInt    @id @default(autoincrement())
  name        String    @unique
  description String    @db.Text
  area_id     BigInt
  created_at  DateTime  @default(now())
  area        Area      @relation(fields: [area_id], references: [id])
  interviews  Interview[]

  @@map("job_types")
  @@index([name])
  @@index([area_id])
}

model Interview {
  id              BigInt    @id @default(autoincrement())
  user_id         String    @db.Uuid
  job_description String    @db.Text
  job_type_id     BigInt?
  resume          String    @db.Text
  created_at      DateTime  @default(now())
  
  user            User      @relation(fields: [user_id], references: [id])
  job_type        JobType?  @relation(fields: [job_type_id], references: [id])
  conversation    Conversation?

  @@map("interview")
  @@index([user_id])
  @@index([job_type_id])
}

model Conversation {
  id           String    @id
  interview_id BigInt    @unique
  details      Json?      @db.JsonB

  interview    Interview @relation(fields: [interview_id], references: [id])

  @@map("conversation")
  @@index([interview_id])
}